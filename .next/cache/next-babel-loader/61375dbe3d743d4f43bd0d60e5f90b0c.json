{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { firebase } from '../../firebase';\nconst db = firebase.firestore();\nconst dbOrderRef = db.collection('products');\nimport cookie from 'js-cookie';\nimport { ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, ADD_QUANTITY, ADD_SHIPPING, ADD_QUANTITY_WITH_NUMBER, RESET_CART, ADD_PRODUCTS, USRER_LOGIN, CHECK_USRER_LOGIN, USRER_LOGOUT } from '../actions/action-types/cart-actions';\nconst token = '76483461103103918uhkjdkjc';\nconst initState = {\n  products: [],\n  addedItems: [],\n  total: 0,\n  shipping: 0,\n  login: false\n};\n\nconst cartReducer = (state = initState, action) => {\n  // User Logout\n  if (action.type === USRER_LOGOUT) {\n    cookie.remove('_livani_token_');\n    return _objectSpread(_objectSpread({}, state), {}, {\n      login: false\n    });\n  } // Check if user login\n\n\n  if (action.type === CHECK_USRER_LOGIN) {\n    const getToken = cookie.get('_livani_token_');\n\n    if (getToken == token) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        login: true\n      });\n    } else {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        login: false\n      });\n    }\n  } // User Login\n\n\n  if (action.type === USRER_LOGIN) {\n    cookie.set('_livani_token_', token);\n    const getToken = cookie.get('_livani_token_'); // console.log('token', getToken)\n\n    if (getToken == token) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        login: true\n      });\n    } else {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        login: false\n      });\n    }\n  }\n\n  if (action.type === ADD_PRODUCTS) {\n    let productsArray = [];\n    dbOrderRef.get().then(res => {\n      res.forEach(doc => {\n        let productsObj = doc.data();\n        productsObj.id = doc.id;\n        productsArray.push(productsObj);\n      });\n    }); // console.log('www', productsArray)\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      products: productsArray\n    });\n  }\n\n  if (action.type === ADD_TO_CART) {\n    let addedItem = state.products.find(item => item.id === action.id); //check if the action id exists in the addedItems\n\n    let existed_item = state.addedItems.find(item => action.id === item.id);\n\n    if (existed_item) {\n      addedItem.quantity += 1;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: state.total + addedItem.newPrice\n      });\n    } else {\n      addedItem.quantity = 1; //calculating the total\n\n      let newTotal = state.total + addedItem.newPrice;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: [...state.addedItems, addedItem],\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === ADD_QUANTITY_WITH_NUMBER) {\n    let addedItem = state.products.find(item => item.id === action.id); //check if the action id exists in the addedItems\n\n    let existed_item = state.addedItems.find(item => action.id === item.id);\n\n    if (existed_item) {\n      addedItem.quantity += action.qty;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: state.total + addedItem.newPrice * action.qty\n      });\n    } else {\n      addedItem.quantity = action.qty; //calculating the total\n\n      let newTotal = state.total + addedItem.newPrice * action.qty;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: [...state.addedItems, addedItem],\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === REMOVE_ITEM) {\n    let itemToRemove = state.addedItems.find(item => action.id === item.id);\n    let new_items = state.addedItems.filter(item => action.id !== item.id); //calculating the total\n\n    let newTotal = state.total - itemToRemove.newPrice * itemToRemove.quantity;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItems: new_items,\n      total: newTotal\n    });\n  }\n\n  if (action.type === ADD_QUANTITY) {\n    let addedItem = state.products.find(item => item.id === action.id);\n    addedItem.quantity += 1;\n    let newTotal = state.total + addedItem.newPrice;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      total: newTotal\n    });\n  }\n\n  if (action.type === SUB_QUANTITY) {\n    let addedItem = state.products.find(item => item.id === action.id); //if the qt == 0 then it should be removed\n\n    if (addedItem.quantity === 1) {\n      let new_items = state.addedItems.filter(item => item.id !== action.id);\n      let newTotal = state.total - addedItem.newPrice;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: new_items,\n        total: newTotal\n      });\n    } else {\n      addedItem.quantity -= 1;\n      let newTotal = state.total - addedItem.newPrice;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === ADD_SHIPPING) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      shipping: state.shipping += 30\n    });\n  }\n\n  if (action.type === 'SUB_SHIPPING') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      shipping: state.shipping -= 30\n    });\n  }\n\n  if (action.type === RESET_CART) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItems: [],\n      total: 0,\n      shipping: 0\n    });\n  } else {\n    return state;\n  }\n};\n\nexport const initStore = (initialState = initState) => {\n  return createStore(cartReducer, initialState, composeWithDevTools(applyMiddleware(thunk)));\n};","map":{"version":3,"sources":["E:/WebTemplate/livani-react-next-ecommerce-template/livani-react/store/reducers/cartReducer.js"],"names":["createStore","applyMiddleware","thunk","composeWithDevTools","firebase","db","firestore","dbOrderRef","collection","cookie","ADD_TO_CART","REMOVE_ITEM","SUB_QUANTITY","ADD_QUANTITY","ADD_SHIPPING","ADD_QUANTITY_WITH_NUMBER","RESET_CART","ADD_PRODUCTS","USRER_LOGIN","CHECK_USRER_LOGIN","USRER_LOGOUT","token","initState","products","addedItems","total","shipping","login","cartReducer","state","action","type","remove","getToken","get","set","productsArray","then","res","forEach","doc","productsObj","data","id","push","addedItem","find","item","existed_item","quantity","newPrice","newTotal","qty","itemToRemove","new_items","filter","initStore","initialState"],"mappings":"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","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { firebase } from '../../firebase';\nconst db = firebase.firestore();\nconst dbOrderRef = db.collection('products');\nimport cookie from 'js-cookie';\n\nimport { \n    ADD_TO_CART,\n    REMOVE_ITEM,\n    SUB_QUANTITY,\n    ADD_QUANTITY, \n    ADD_SHIPPING,\n    ADD_QUANTITY_WITH_NUMBER,\n    RESET_CART,\n    ADD_PRODUCTS,\n    USRER_LOGIN,\n    CHECK_USRER_LOGIN,\n    USRER_LOGOUT\n} from '../actions/action-types/cart-actions'\n\nconst token = '76483461103103918uhkjdkjc';\n\nconst initState = {\n    products: [],\n    addedItems:[],\n    total: 0,\n    shipping: 0,\n    login: false\n}\n\nconst cartReducer = (state = initState, action) => {\n\n    // User Logout\n    if (action.type === USRER_LOGOUT){\n        cookie.remove('_livani_token_')\n        return{\n            ...state,\n            login: false\n        }\n    }\n\n    // Check if user login\n    if (action.type === CHECK_USRER_LOGIN){\n        const getToken = cookie.get('_livani_token_')\n\n        if (getToken == token){\n            return{\n                ...state,\n                login: true\n            }\n        } else {\n            return{\n                ...state,\n                login: false\n            }\n        }\n    }\n\n    // User Login\n    if(action.type === USRER_LOGIN){\n        cookie.set('_livani_token_', token);\n\n        const getToken = cookie.get('_livani_token_')\n\n        // console.log('token', getToken)\n\n        if (getToken == token){\n            return{\n                ...state,\n                login: true\n            }\n        } else {\n            return{\n                ...state,\n                login: false\n            }\n        }\n        \n    }\n\n    if(action.type === ADD_PRODUCTS){\n        let productsArray = [];\n        dbOrderRef.get()\n        .then(res => {\n            res.forEach(doc => {\n                let productsObj = doc.data();\n                productsObj.id = doc.id;\n                productsArray.push(productsObj)\n            });\n        });\n\n        // console.log('www', productsArray)\n        \n        return{\n            ...state,\n            products: productsArray\n        }\n    }\n   \n    if(action.type === ADD_TO_CART){\n        let addedItem = state.products.find(item => item.id === action.id)\n        //check if the action id exists in the addedItems\n        let existed_item= state.addedItems.find(item=> action.id === item.id)\n        if(existed_item)\n        {\n            addedItem.quantity += 1 \n            return {\n                ...state,\n                total: state.total + addedItem.newPrice \n            }\n        } else {\n            addedItem.quantity = 1;\n            //calculating the total\n            let newTotal = state.total + addedItem.newPrice \n            \n            return {\n                ...state,\n                addedItems: [...state.addedItems, addedItem],\n                total : newTotal\n            }\n            \n        }\n    }\n\n    if(action.type === ADD_QUANTITY_WITH_NUMBER){\n        let addedItem = state.products.find(item => item.id === action.id)\n        //check if the action id exists in the addedItems\n        let existed_item= state.addedItems.find(item=> action.id === item.id)\n        if(existed_item)\n        {\n            addedItem.quantity += action.qty\n            return {\n                ...state,\n                total: state.total + addedItem.newPrice * action.qty\n            }\n        } else {\n            addedItem.quantity = action.qty;\n            //calculating the total\n            let newTotal = state.total + addedItem.newPrice * action.qty\n            \n            return {\n                ...state,\n                addedItems: [...state.addedItems, addedItem],\n                total : newTotal\n            }\n            \n        }\n    }\n    \n\n    if(action.type === REMOVE_ITEM){\n        let itemToRemove= state.addedItems.find(item=> action.id === item.id)\n        let new_items = state.addedItems.filter(item=> action.id !== item.id)\n        \n        //calculating the total\n        let newTotal = state.total - (itemToRemove.newPrice * itemToRemove.quantity );\n\n        return {\n            ...state,\n            addedItems: new_items,\n            total: newTotal\n        }\n    }\n\n    if(action.type === ADD_QUANTITY){\n        let addedItem = state.products.find(item=> item.id === action.id)\n        addedItem.quantity += 1 \n        let newTotal = state.total + addedItem.newPrice\n        return {\n            ...state,\n            total: newTotal\n        }\n    }\n\n    if(action.type === SUB_QUANTITY){  \n        let addedItem = state.products.find(item=> item.id === action.id) \n        //if the qt == 0 then it should be removed\n        if(addedItem.quantity === 1){\n            let new_items = state.addedItems.filter(item=>item.id !== action.id)\n            let newTotal = state.total - addedItem.newPrice\n            return {\n                ...state,\n                addedItems: new_items,\n                total: newTotal\n            }\n        } else {\n            addedItem.quantity -= 1\n            let newTotal = state.total - addedItem.newPrice\n            return {\n                ...state,\n                total: newTotal\n            }\n        }\n        \n    }\n\n    if(action.type === ADD_SHIPPING){\n        return {\n            ...state,\n            shipping: state.shipping += 30\n        }\n    }\n\n    if(action.type === 'SUB_SHIPPING'){\n        return {\n            ...state,\n            shipping: state.shipping -= 30\n        }\n    }\n\n    if(action.type === RESET_CART){\n        return {\n            ...state,\n            addedItems: [],\n            total: 0,\n            shipping: 0\n        }\n    }\n    \n    else {\n        return state\n    }\n}\n\nexport const initStore = (initialState = initState) => {\n    return createStore(\n        cartReducer,\n        initialState,\n        composeWithDevTools(applyMiddleware(thunk))\n    )\n}"]},"metadata":{},"sourceType":"module"}