{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nvar propTypes = {\n  items: PropTypes.array.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  initialPage: PropTypes.number,\n  pageSize: PropTypes.number\n};\nvar defaultProps = {\n  initialPage: 1,\n  pageSize: 10\n};\n\nvar Pagination = /*#__PURE__*/function (_React$Component) {\n  _inherits(Pagination, _React$Component);\n\n  var _super = _createSuper(Pagination);\n\n  function Pagination() {\n    var _this;\n\n    _classCallCheck(this, Pagination);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      pager: {}\n    });\n\n    return _this;\n  }\n\n  _createClass(Pagination, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      // set page if items array isn't empty\n      if (this.props.items && this.props.items.length) {\n        this.setPage(this.props.initialPage);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      // reset page if items array has changed\n      if (this.props.items !== prevProps.items) {\n        this.setPage(this.props.initialPage);\n      }\n    }\n  }, {\n    key: \"setPage\",\n    value: function setPage(page) {\n      var _this$props = this.props,\n          items = _this$props.items,\n          pageSize = _this$props.pageSize;\n      var pager = this.state.pager;\n\n      if (page < 1 || page > pager.totalPages) {\n        return;\n      } // get new pager object for specified page\n\n\n      pager = this.getPager(items.length, page, pageSize); // get new page of items from items array\n\n      var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1); // update state\n\n      this.setState({\n        pager: pager\n      }); // call change page function in parent component\n\n      this.props.onChangePage(pageOfItems, pager);\n    }\n  }, {\n    key: \"getPager\",\n    value: function getPager(totalItems, currentPage, pageSize) {\n      // default to first page\n      currentPage = currentPage || 1; // default page size is 10\n\n      pageSize = pageSize || 10; // calculate total pages\n\n      var totalPages = Math.ceil(totalItems / pageSize);\n      var startPage, endPage;\n\n      if (totalPages <= 10) {\n        // less than 10 total pages so show all\n        startPage = 1;\n        endPage = totalPages;\n      } else {\n        // more than 10 total pages so calculate start and end pages\n        if (currentPage <= 6) {\n          startPage = 1;\n          endPage = 10;\n        } else if (currentPage + 4 >= totalPages) {\n          startPage = totalPages - 9;\n          endPage = totalPages;\n        } else {\n          startPage = currentPage - 5;\n          endPage = currentPage + 4;\n        }\n      } // calculate start and end item indexes\n\n\n      var startIndex = (currentPage - 1) * pageSize;\n      var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1); // create an array of pages to ng-repeat in the pager control\n\n      var pages = _toConsumableArray(Array(endPage + 1 - startPage).keys()).map(function (i) {\n        return startPage + i;\n      }); // return object with all pager properties required by the view\n\n\n      return {\n        totalItems: totalItems,\n        currentPage: currentPage,\n        pageSize: pageSize,\n        totalPages: totalPages,\n        startPage: startPage,\n        endPage: endPage,\n        startIndex: startIndex,\n        endIndex: endIndex,\n        pages: pages\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var pager = this.state.pager;\n\n      if (!pager.pages || pager.pages.length <= 1) {\n        // don't display pager if there is only 1 page\n        return null;\n      } // console.log(this.state.pager)\n\n\n      return __jsx(\"div\", {\n        className: \"pagination-area text-center\"\n      }, __jsx(Link, {\n        href: \"#\"\n      }, __jsx(\"a\", {\n        onClick: function onClick(e) {\n          e.preventDefault();\n\n          _this2.setPage(pager.currentPage - 1);\n        },\n        className: \"prev page-numbers \".concat(pager.currentPage === 1 ? 'disabled' : '')\n      }, __jsx(\"i\", {\n        className: \"bx bx-chevron-left\"\n      }))), pager.pages.map(function (page, index) {\n        return __jsx(Link, {\n          href: \"#\",\n          key: index\n        }, __jsx(\"a\", {\n          className: \"page-numbers \".concat(pager.currentPage === page ? 'current' : ''),\n          onClick: function onClick(e) {\n            e.preventDefault();\n\n            _this2.setPage(page);\n          }\n        }, page));\n      }), __jsx(Link, {\n        href: \"#\"\n      }, __jsx(\"a\", {\n        onClick: function onClick(e) {\n          e.preventDefault();\n\n          _this2.setPage(pager.currentPage + 1);\n        },\n        className: \"next page-numbers \".concat(pager.currentPage === pager.totalPages ? 'disabled' : '')\n      }, __jsx(\"i\", {\n        className: \"bx bx-chevron-right\"\n      }))));\n    }\n  }]);\n\n  return Pagination;\n}(React.Component);\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\nexport default Pagination;","map":{"version":3,"sources":["E:/WebTemplate/livani-react-next-ecommerce-template/livani-react/components/Common/Pagination.js"],"names":["React","PropTypes","Link","propTypes","items","array","isRequired","onChangePage","func","initialPage","number","pageSize","defaultProps","Pagination","pager","props","length","setPage","prevProps","prevState","page","state","totalPages","getPager","pageOfItems","slice","startIndex","endIndex","setState","totalItems","currentPage","Math","ceil","startPage","endPage","min","pages","Array","keys","map","i","e","preventDefault","index","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\n\nconst propTypes = {\n    items: PropTypes.array.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    initialPage: PropTypes.number,\n    pageSize: PropTypes.number\n}\n\nconst defaultProps = {\n    initialPage: 1,\n    pageSize: 10\n}\n\nclass Pagination extends React.Component {\n\n    state = { pager: {} };\n\n    componentWillMount() {\n        // set page if items array isn't empty\n        if (this.props.items && this.props.items.length) {\n            this.setPage(this.props.initialPage);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // reset page if items array has changed\n        if (this.props.items !== prevProps.items) {\n            this.setPage(this.props.initialPage);\n        }\n    }\n\n    setPage(page) {\n        var { items, pageSize } = this.props;\n        var pager = this.state.pager;\n\n        if (page < 1 || page > pager.totalPages) {\n            return;\n        }\n\n        // get new pager object for specified page\n        pager = this.getPager(items.length, page, pageSize);\n\n        // get new page of items from items array\n        var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\n\n        // update state\n        this.setState({ pager: pager });\n\n        // call change page function in parent component\n        this.props.onChangePage(pageOfItems, pager);\n    }\n\n    getPager(totalItems, currentPage, pageSize) {\n        // default to first page\n        currentPage = currentPage || 1;\n\n        // default page size is 10\n        pageSize = pageSize || 10;\n\n        // calculate total pages\n        var totalPages = Math.ceil(totalItems / pageSize);\n\n        var startPage, endPage;\n        if (totalPages <= 10) {\n            // less than 10 total pages so show all\n            startPage = 1;\n            endPage = totalPages;\n        } else {\n            // more than 10 total pages so calculate start and end pages\n            if (currentPage <= 6) {\n                startPage = 1;\n                endPage = 10;\n            } else if (currentPage + 4 >= totalPages) {\n                startPage = totalPages - 9;\n                endPage = totalPages;\n            } else {\n                startPage = currentPage - 5;\n                endPage = currentPage + 4;\n            }\n        }\n\n        // calculate start and end item indexes\n        var startIndex = (currentPage - 1) * pageSize;\n        var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n        // create an array of pages to ng-repeat in the pager control\n        var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\n\n        // return object with all pager properties required by the view\n        return {\n            totalItems: totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages\n        };\n    }\n\n    render() {\n        var pager = this.state.pager;\n\n        if (!pager.pages || pager.pages.length <= 1) {\n            // don't display pager if there is only 1 page\n            return null;\n        }\n\n        // console.log(this.state.pager)\n\n        return (\n            <div className=\"pagination-area text-center\">\n                <Link href=\"#\">\n                    <a \n                        onClick={e => {e.preventDefault();this.setPage(pager.currentPage - 1)}}\n                        className={`prev page-numbers ${pager.currentPage === 1 ? 'disabled' : ''}`}\n                    >\n                        <i className='bx bx-chevron-left'></i>\n                    </a>\n                </Link>\n\n                {pager.pages.map((page, index) =>\n                    <Link href=\"#\" key={index}>\n                        <a \n                            className={`page-numbers ${pager.currentPage === page ? 'current' : ''}`}\n                            onClick={e => {e.preventDefault();this.setPage(page)}}\n                        >{page}</a>\n                    </Link>\n                )}\n                <Link href=\"#\">\n                    <a \n                        onClick={e => {e.preventDefault();this.setPage(pager.currentPage + 1)}}\n                        className={`next page-numbers ${pager.currentPage === pager.totalPages ? 'disabled' : ''}`}\n                    >\n                        <i className='bx bx-chevron-right'></i>\n                    </a>\n                </Link>\n            </div>\n        );\n    }\n}\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\n\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}