{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport SingleProduct from '../Common/SingleProduct';\nimport { addToCart } from '../../store/actions/cartActions';\nimport QuickViewModal from '../Modals/QuickViewModal';\nimport Pagination from '../Common/Pagination';\n\nclass ProductsNoSidebar extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      QuickViewModal: false,\n      modalProduct: {},\n      products: [],\n      pageOfItems: [],\n      currentPage: 0,\n      pageSize: 0\n    });\n\n    _defineProperty(this, \"onChangePage\", (pageOfItems, pager) => {\n      let {\n        currentPage,\n        pageSize\n      } = pager; // update state with new page of items\n\n      this.setState({\n        pageOfItems,\n        currentPage,\n        pageSize\n      });\n      window.scrollTo({\n        top: 0,\n        left: 100,\n        behavior: 'smooth'\n      });\n    });\n\n    _defineProperty(this, \"toggleModal\", () => {\n      this.setState({\n        QuickViewModal: !this.state.QuickViewModal\n      });\n    });\n\n    _defineProperty(this, \"handleAddToCart\", id => {\n      this.props.addToCart(id);\n      toast.success('Added to the cart', {\n        position: \"bottom-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    });\n\n    _defineProperty(this, \"passDataToModal\", product => {\n      this.setState({\n        modalProduct: product\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      products: this.props.products\n    });\n  }\n\n  render() {\n    let {\n      currentPage,\n      pageSize,\n      products\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(ToastContainer, null), __jsx(\"div\", {\n      className: \"products-filter-options\"\n    }, __jsx(\"div\", {\n      className: \"row align-items-center\"\n    }, __jsx(\"div\", {\n      className: \"col-lg-8 col-md-8\"\n    }, __jsx(\"p\", null, \"Showing \", currentPage == 1 ? currentPage : (currentPage - 1) * pageSize + 1, \" \\u2013 \", currentPage * pageSize)), __jsx(\"div\", {\n      className: \"col-lg-4 col-md-4\"\n    }, __jsx(\"p\", {\n      className: \"text-right\"\n    }, \"Total \", products.length, \" Products\")))), __jsx(\"div\", {\n      id: \"products-collections-filter\",\n      className: \"row\"\n    }, this.state.pageOfItems.map((product, idx) => __jsx(SingleProduct, {\n      styleCls: \"col-lg-4 col-md-6 col-sm-6 products-col-item\",\n      product: product,\n      key: idx,\n      onHandleAddToCart: this.handleAddToCart,\n      onhandleModalProduct: this.passDataToModal,\n      ontoggleModal: this.toggleModal\n    }))), __jsx(QuickViewModal, {\n      onClick: this.toggleModal,\n      active: this.state.QuickViewModal ? 'active' : '',\n      product: this.state.modalProduct\n    }), __jsx(Pagination, {\n      pageSize: 9,\n      items: this.state.products,\n      onChangePage: this.onChangePage\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: id => {\n      dispatch(addToCart(id));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ProductsNoSidebar);","map":{"version":3,"sources":["E:/WebTemplate/livani-react-next-ecommerce-template/livani-react/components/Shop/ProductsNoSidebar.js"],"names":["React","Component","connect","ToastContainer","toast","SingleProduct","addToCart","QuickViewModal","Pagination","ProductsNoSidebar","modalProduct","products","pageOfItems","currentPage","pageSize","pager","setState","window","scrollTo","top","left","behavior","state","id","props","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","product","componentDidMount","render","length","map","idx","handleAddToCart","passDataToModal","toggleModal","onChangePage","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport SingleProduct from '../Common/SingleProduct';\nimport { addToCart } from '../../store/actions/cartActions';\nimport QuickViewModal from '../Modals/QuickViewModal';\nimport Pagination from '../Common/Pagination';\n\nclass ProductsNoSidebar extends Component {\n    state = {\n        QuickViewModal: false,\n        modalProduct: {},\n        products: [],\n        pageOfItems: [], \n        currentPage: 0,\n        pageSize: 0\n    };\n\n    componentDidMount(){\n        this.setState({\n            products: this.props.products\n        })\n    }\n\n    onChangePage = (pageOfItems, pager) => {\n        let {currentPage, pageSize} = pager\n        // update state with new page of items\n        this.setState({\n            pageOfItems, currentPage, pageSize\n        });\n        window.scrollTo({\n            top: 0,\n            left: 100,\n            behavior: 'smooth'\n        })\n    }\n\n    toggleModal = () => {\n        this.setState({\n            QuickViewModal: !this.state.QuickViewModal\n        });\n    }\n\n    handleAddToCart = (id) => {\n        this.props.addToCart(id); \n        toast.success('Added to the cart', {\n            position: \"bottom-left\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true\n        });\n    }\n\n    passDataToModal = (product) => {\n        this.setState({\n            modalProduct: product\n        });\n    }\n    render() {\n        let {currentPage, pageSize, products} = this.state\n        return (\n            <div className=\"container\">\n                <ToastContainer />\n                <div className=\"products-filter-options\">\n                    <div className=\"row align-items-center\">\n                        <div className=\"col-lg-8 col-md-8\">\n                            <p>\n                                Showing {currentPage == 1 ? currentPage : ((currentPage - 1) * pageSize) + 1} â€“ {currentPage * pageSize}\n                            </p>\n                        </div>\n\n                        <div className=\"col-lg-4 col-md-4\">\n                            <p className=\"text-right\">\n                                Total {products.length} Products\n                            </p>\n                            {/* <div className=\"products-ordering-list\">\n                                <select className=\"form-control\">\n                                    <option>Sort by Price: Low to High</option>\n                                    <option>Default Sorting</option>\n                                    <option>Sort by Popularity</option>\n                                    <option>Sort by Average Rating</option>\n                                    <option>Sort by Latest</option>\n                                    <option>Sort by Price: High to Low</option>\n                                </select>\n                            </div> */}\n                        </div>\n                    </div>\n                </div>\n\n                <div id=\"products-collections-filter\" className=\"row\">\n                    {this.state.pageOfItems.map((product, idx) => (\n                        <SingleProduct \n                            styleCls=\"col-lg-4 col-md-6 col-sm-6 products-col-item\"\n                            product={product}\n                            key={idx}\n                            onHandleAddToCart={this.handleAddToCart}\n                            onhandleModalProduct={this.passDataToModal}\n                            ontoggleModal={this.toggleModal}\n                        />\n                    ))}\n                </div>\n\n                {/* Quick View Modal */}\n                <QuickViewModal\n                    onClick={this.toggleModal} active={this.state.QuickViewModal ? 'active' : ''}\n                    product={this.state.modalProduct}\n                />\n\n                {/* Pagination */}\n                <Pagination \n                    pageSize={9}\n                    items={this.state.products} \n                    onChangePage={this.onChangePage}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addToCart: (id) => { dispatch(addToCart(id)) }\n    }\n}\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(ProductsNoSidebar);"]},"metadata":{},"sourceType":"module"}