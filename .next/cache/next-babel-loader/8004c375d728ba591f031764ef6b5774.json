{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\n\nvar GoTop = function GoTop(props) {\n  _s();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      thePosition = _React$useState2[0],\n      setThePosition = _React$useState2[1];\n\n  var timeoutRef = React.useRef(null);\n  React.useEffect(function () {\n    document.addEventListener(\"scroll\", function () {\n      if (window.scrollY > 170) {\n        setThePosition(true);\n      } else {\n        setThePosition(false);\n      }\n    });\n  }, []);\n\n  var onScrollStep = function onScrollStep() {\n    if (window.pageYOffset === 0) {\n      clearInterval(timeoutRef.current);\n    }\n\n    window.scroll(0, window.pageYOffset - props.scrollStepInPx);\n  };\n\n  var scrollToTop = function scrollToTop() {\n    timeoutRef.current = setInterval(onScrollStep, props.delayInMs);\n  };\n\n  var renderGoTopIcon = function renderGoTopIcon() {\n    return __jsx(\"div\", {\n      className: \"go-top \".concat(thePosition ? 'active' : ''),\n      onClick: scrollToTop\n    }, __jsx(\"i\", {\n      className: \"bx bx-up-arrow-alt\"\n    }));\n  };\n\n  return __jsx(React.Fragment, null, renderGoTopIcon());\n};\n\n_s(GoTop, \"qbqyUsj9271tcAUSQ+lvo+irdPs=\");\n\n_c = GoTop;\nexport default GoTop;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoTop\");","map":{"version":3,"sources":["E:/WebTemplate/livani-react-next-ecommerce-template/livani-react/components/Shared/GoTop.js"],"names":["React","GoTop","props","useState","thePosition","setThePosition","timeoutRef","useRef","useEffect","document","addEventListener","window","scrollY","onScrollStep","pageYOffset","clearInterval","current","scroll","scrollStepInPx","scrollToTop","setInterval","delayInMs","renderGoTopIcon"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA;;AAErB,wBAAsCF,KAAK,CAACG,QAAN,CAAe,KAAf,CAAtC;AAAA;AAAA,MAAOC,WAAP;AAAA,MAAoBC,cAApB;;AACA,MAAMC,UAAU,GAAGN,KAAK,CAACO,MAAN,CAAa,IAAb,CAAnB;AAEAP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,YAAM;AAClBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,EAAoC,YAAM;AACtC,UAAIC,MAAM,CAACC,OAAP,GAAiB,GAArB,EAA0B;AACtBP,QAAAA,cAAc,CAAC,IAAD,CAAd;AACH,OAFD,MAEO;AACHA,QAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,KAND;AAOH,GARD,EAQG,EARH;;AAUA,MAAMQ,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,QAAIF,MAAM,CAACG,WAAP,KAAuB,CAA3B,EAA6B;AACzBC,MAAAA,aAAa,CAACT,UAAU,CAACU,OAAZ,CAAb;AACH;;AACDL,IAAAA,MAAM,CAACM,MAAP,CAAc,CAAd,EAAiBN,MAAM,CAACG,WAAP,GAAqBZ,KAAK,CAACgB,cAA5C;AACH,GALD;;AAOA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBb,IAAAA,UAAU,CAACU,OAAX,GAAqBI,WAAW,CAACP,YAAD,EAAeX,KAAK,CAACmB,SAArB,CAAhC;AACH,GAFD;;AAIA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1B,WACI;AAAK,MAAA,SAAS,mBAAYlB,WAAW,GAAG,QAAH,GAAc,EAArC,CAAd;AAAyD,MAAA,OAAO,EAAEe;AAAlE,OACI;AAAG,MAAA,SAAS,EAAC;AAAb,MADJ,CADJ;AAKH,GAND;;AAQA,SACI,MAAC,KAAD,CAAO,QAAP,QACKG,eAAe,EADpB,CADJ;AAKH,CAvCD;;GAAMrB,K;;KAAAA,K;AAyCN,eAAeA,KAAf","sourcesContent":["import React from 'react';\n\nconst GoTop = (props) => {\n\n    const [thePosition, setThePosition] = React.useState(false);\n    const timeoutRef = React.useRef(null);\n\n    React.useEffect(() => {\n        document.addEventListener(\"scroll\", () => {\n            if (window.scrollY > 170) {\n                setThePosition(true)\n            } else {\n                setThePosition(false);\n            }\n        });\n    }, [])\n    \n    const onScrollStep = () => {\n        if (window.pageYOffset === 0){\n            clearInterval(timeoutRef.current);\n        }\n        window.scroll(0, window.pageYOffset - props.scrollStepInPx);\n    }\n\n    const scrollToTop = () => {\n        timeoutRef.current = setInterval(onScrollStep, props.delayInMs);\n    }\n\n    const renderGoTopIcon = () => {\n        return (\n            <div className={`go-top ${thePosition ? 'active' : ''}`} onClick={scrollToTop}>\n                <i className=\"bx bx-up-arrow-alt\"></i>\n            </div>\n        )\n    }\n\n    return (\n        <React.Fragment>\n            {renderGoTopIcon()}\n        </React.Fragment>\n    )\n}\n\nexport default GoTop;"]},"metadata":{},"sourceType":"module"}